<config>
{
  "component": true
}
</config>

<template>
  <view class="weui-uploader">
    <view class="weui-uploader__hd">
      <view class="weui-uploader__title">{{title}}</view>
      <view class="weui-uploader__info">{{files.length}}/{{maxCount}}</view>
    </view>
    <view class="weui-uploader__bd">
      <view class="weui-uploader__files">
        <block wx:for="{{files}}" wx:key="index">
          <view class="weui-uploader__file {{ item.error || item.status ? 'weui-uploader__file_status' : '' }}" bindtap="previewImage" data-index="{{index}}">
            <image class="weui-uploader__img" src="{{item.url}}" mode="aspectFill" />
            <view wx:if="{{item.error}}" class="weui-uploader__file-content">
              <icon type="warn" size="23" color="#F43530"></icon>
            </view>
            <view wx:elif="{{item.status}}" class="weui-uploader__file-content">
              {{item.status}}
            </view>
          </view>
        </block>
      </view>
      <view wx:if="{{maxCount > files.length}}" class="weui-uploader__input-box">
        <view class="weui-uploader__input" bindtap="chooseImage"></view>
      </view>
    </view>
  </view>
</template>

<script>
const HTTP_OR_HTTPS_REGEXP = /^https?:\/\//

Component({
  properties: {
    title: {
      type: String,
      value: '图片上传',
    },
    maxCount: {
      type: Number,
      value: 4,
    },
    // see https://weui.github.io/react-weui/docs/#/react-weui/docs/page/1/articles/29
    // File {
    //   <Boolean> error
    //   <String> status
    //   <String> url
    // }
    files: {
      type: Array,
      value: [],
    },
    sizeType: {
      type: Array,
      value: ['original', 'compressed'],
    },
    sourceType: {
      type: Array,
      value: ['album', 'camera'],
    },
  },
  methods: {
    chooseImage () {
      let { sizeType, sourceType, maxCount } = this.data
      let count = maxCount - this.data.files.length
      if (count <= 0) {
        return
      }

      wx.chooseImage({
        count,
        sizeType,
        sourceType,
        success: ({ tempFilePaths }) => {
          this.setData({
            files: this.data.files.concat(tempFilePaths.map((url) => {
              return {
                error: false,
                status: '',
                url,
              }
            })),
          })
        },
      })
    },
    previewImage (event) {
      let current = this.data.files[event.currentTarget.dataset.index].url
      if (!HTTP_OR_HTTPS_REGEXP.test(current)) {
        return
      }

      wx.previewImage({
        current,
        urls: this.data.files.filter((file) => HTTP_OR_HTTPS_REGEXP.test(file.url)).map((file) => file.url),
      })
    },
  },
})
</script>

<style lang="postcss">
@import 'weui-wxss/dist/style/widget/weui-cell/weui-uploader.wxss';

:host {
  display: block;
}

</style>
